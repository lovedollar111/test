package cn.dogplanet.wxapi;import android.app.Activity;import android.content.Intent;import android.content.SharedPreferences;import android.os.Bundle;import android.view.View;import android.view.View.OnClickListener;import android.widget.LinearLayout;import android.widget.TextView;import com.tencent.mm.sdk.constants.ConstantsAPI;import com.tencent.mm.sdk.modelbase.BaseReq;import com.tencent.mm.sdk.modelbase.BaseResp;import com.tencent.mm.sdk.openapi.IWXAPI;import com.tencent.mm.sdk.openapi.IWXAPIEventHandler;import com.tencent.mm.sdk.openapi.WXAPIFactory;import java.util.HashMap;import java.util.Map;import cn.dogplanet.R;import cn.dogplanet.app.util.GsonHelper;import cn.dogplanet.app.util.PublicReq;import cn.dogplanet.app.util.ToastUtil;import cn.dogplanet.constant.HttpUrl;import cn.dogplanet.constant.WCache;import cn.dogplanet.entity.Expert;import cn.dogplanet.entity.OrderDetailResp;import cn.dogplanet.entity.OrderMainEnum;import cn.dogplanet.net.volley.Response;import cn.dogplanet.net.volley.VolleyError;public class WXPayEntryActivity extends Activity implements IWXAPIEventHandler,		OnClickListener {	private static final String TAG = "MicroMsg.SDKSample.WXPayEntryActivity";	private TextView textView;	private String orderId;	private IWXAPI api;	private Expert expert;	private LinearLayout layout;	@Override	public void onCreate(Bundle savedInstanceState) {		super.onCreate(savedInstanceState);		View bv = this.findViewById(android.R.id.title);		bv.setVisibility(View.GONE);		setContentView(R.layout.pay_result);		expert = WCache.getCacheExpert();		textView = (TextView) this.findViewById(R.id.msg);		layout = (LinearLayout) this.findViewById(R.id.lay_main);		this.findViewById(R.id.btn_ok).setOnClickListener(this);		this.findViewById(R.id.btn_cancel).setOnClickListener(this);		api = WXAPIFactory.createWXAPI(this, Constants.APP_ID);		api.handleIntent(getIntent(), this);	}	@Override	protected void onNewIntent(Intent intent) {		super.onNewIntent(intent);		setIntent(intent);		api.handleIntent(intent, this);	}	@Override	public void onReq(BaseReq req) {	}	@Override	public void onResp(BaseResp resp) {		SharedPreferences sharedPreferences = getSharedPreferences(				"shopPayMsg", Activity.MODE_PRIVATE);		if (sharedPreferences != null) {			orderId = sharedPreferences.getString("orderId", "");		}		if (resp.getType() == ConstantsAPI.COMMAND_PAY_BY_WX) {			if (resp.errCode == 0) {				layout.setVisibility(View.GONE);				getOrderDetail();			} else if (resp.errCode == -1) {				textView.setText("支付失败");			} else if (resp.errCode == -2) {				textView.setText("用户取消支付");			}		} else {			textView.setText("支付失败");		}	}	@Override	public void onClick(View v) {		// TODO Auto-generated method stub		switch (v.getId()) {		case R.id.btn_cancel:		case R.id.btn_ok:			finish();			break;		default:			break;		}	}	private void getOrderDetail() {		if (null != expert) {			Map<String, String> params = new HashMap<String, String>();			params.put("expert_id", expert.getId().toString());			params.put("access_token", expert.getAccess_token());			params.put("id", orderId);			PublicReq.request(HttpUrl.GET_ORDER_DETAIL,					new Response.Listener<String>() {						@Override						public void onResponse(String response) {							layout.setVisibility(View.VISIBLE);							OrderDetailResp respData = GsonHelper.parseObject(									response, OrderDetailResp.class);							if (respData != null) {								if (respData.isSuccess()) {                                    if (OrderMainEnum.OS_6.getStaus().equals(                                            respData.getOrder().getStatus())) {    //									startActivity(OrderDetailActivity.newIntetent(orderId, "0", 0));                                        finish();                                    } else {                                        textView.setText("支付失败");                                    }                                } else {                                    ToastUtil                                            .showError(R.string.network_data_error);                                }							}						}					}, new Response.ErrorListener() {						@Override						public void onErrorResponse(VolleyError error) {							ToastUtil.showError(R.string.network_error);						}					}, params);		}	}}